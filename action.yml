name: 'IaC Scan'
description: 'Verifies if there are any .tf files and runs snyk iac test if found'

inputs:
  snyk-token:
    description: 'Snyk API token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: 'Check for .tf files'
      id: check_tf_files
      shell: bash
      run: |
        if git ls-files '*.tf' | grep -q .; then
          echo "found=true" >> $GITHUB_ENV
        else
          echo "found=false" >> $GITHUB_ENV
        fi

    - name: 'Set up Node.js'
      if: env.found == 'true'
      shell: bash
      run: |
        curl -sL https://deb.nodesource.com/setup_16.x | bash -
        apt-get install -y nodejs

    - name: 'Install Snyk CLI'
      if: env.found == 'true'
      shell: bash
      run: npm install -g snyk

    - name: 'Authenticate Snyk'
      if: env.found == 'true'
      shell: bash
      env:
        SNYK_TOKEN: ${{ inputs.snyk-token }}
      run: snyk auth $SNYK_TOKEN

    - name: 'Run Snyk IaC Test'
      if: env.found == 'true'
      shell: bash
      env:
        SNYK_TOKEN: ${{ inputs.snyk-token }}
      run: |
        snyk iac test > snyk_output.txt || true
        echo "Snyk test output:"
        cat snyk_output.txt
        TEST_OUTPUT=$(cat snyk_output.txt)
        echo "SNYK_TEST_OUTPUT<<EOF" >> $GITHUB_ENV
        echo "${TEST_OUTPUT}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "Test output captured."

    - name: 'Use Pull Request Decoration Action'
      if: env.SNYK_TEST_OUTPUT != ''
      shell: bash
      run: |
        echo "Decorating PR with Snyk output"
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Content-Type: application/json" \
        -d '{"body":"**Snyk IaC Test Output:**\n```'${{ env.SNYK_TEST_OUTPUT }}'```"}' \
        "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
