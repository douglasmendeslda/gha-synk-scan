name: Snyk IaC Scan

on:
  pull_request:
  push:
    branches:
    - main
env:
  SCAN_OUTPUT: ""
  
permissions:
  contents: read
  issues: write
  pull-requests: write
  
jobs:
  snyk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
  
      - name: Install dependencies
        run: pip install subprocess-run

      - name: Check for Terraform files
        id: terraform-check
        run: python scripts/check_terraform_files.py

      - name: Set up Node.js
        if: env.TERRAFORM_FILES_FOUND == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.1'

      - name: Install Snyk CLI
        if: env.TERRAFORM_FILES_FOUND == 'true'
        run: npm install -g snyk

      - name: Authenticate Snyk
        if: env.TERRAFORM_FILES_FOUND == 'true'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Run Snyk Test
        id: snyk-test
        run: |
          SCAN_OUTPUT=$(snyk iac test)
          echo "$SCAN_OUTPUT"
          echo "::set-output name=scan_output::$SCAN_OUTPUT"

      - name: Use Pull Request Decoration Action
        uses: douglasmendeslda/gha-pull-request-decoration@v1.1
        if: always()
        with:
          message: ${{ steps.snyk-test.outputs.scan_output }}
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.pull_request.head.repo.name }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
